<template>
    <div id="file-unpass-page"> 
      <div class="search-input">
          <el-input
            placeholder="请输入片名搜索"
            suffix-icon="el-icon-search"
            v-model="name"
            @change="getFileList"
            @keyup.enter.native="getFileList">
          </el-input>
      </div>
    <!--上传中-->
    <el-table
        :data="fileUnpass"
        style="width: 100%"
        stripe
        :header-cell-style="getRowClass">
        <el-table-column
        prop="name"
        label="片源名称"
        width="">
         <template slot-scope="scope">
          <p>{{scope.row.projectName}}</p>
        </template>
        </el-table-column>
        <el-table-column
        prop="divname"
        label="分集名称"
        width="">
         <template slot-scope="scope">
            <div v-if="!scope.row.edit" @click="penEdit(scope.$index, scope.row)">
              <p>{{scope.row.episodeName}}</p>
              <span class="i-icon">修改</span>
            </div>
            <div class="form-group" v-if="scope.row.edit">
              <div class="input-group">
                <el-input size="small" v-model="scope.row.episodeName"></el-input>
              </div>
              <span class="preserve" @click="penEdit(scope.$index, scope.row)">保存</span>
            </div>
        </template>
        </el-table-column>      
        <el-table-column
        prop="refuse"
        label="拒绝原因"
        width=""
        align="center"
        class-name="refuse">
         <template slot-scope="scope">
          <p class="refuse">视频不清晰</p>
         </template>
        </el-table-column>
        <el-table-column
        label="操作"
        width="120">
        <template slot-scope="scope">
          <p class="operate" v-if="!scope.row.stop"  @click="handleEdit(scope.$index, scope.row)">重新上传</p>
          <p class="operate" v-if="scope.row.stop" @click="handleEdit(scope.$index, scope.row)">暂停</p>
        </template>
        </el-table-column>
    </el-table>
    <file-page :message="total" v-on:childByValue="childByValue"></file-page>
    </div>
</template>

<style>
  .el-table .warning-row {
    background: #efefef;
  }

  .el-table .success-row {
    background: #efefef;
  }
</style>

<script>
import {get, post, httpRequestConstant} from '../../actions/utils/httpClient'
import mockdata from '@/scripts/mockdata.js'
import FilePage from '../components/FilePage'
import server from '../../actions/config/server'
import episode from '@/scripts/episode.js'
export default {
  name: 'file-unpass',
  components: {FilePage},
  data () {
    return {
      fileUnpass: [],
      total: 0,
      oldepisodeName: [],
      rows: '',
      cPage: 1,
      csize: 10,
      name: ''
    }
  },
  created() {
    this.getFileList()
  },
  filters: {
    Status: function(data) {
      switch (data) {
        case 'A': return '待审核'
        case 'B': return '审核通过'
        case 'C': return '审核不通过'
      }
    },
    Color: function(data) {
      switch (data) {
        case 'A': return 'background:red'
        case 'B': return 'background:yellow'
        case 'C': return 'background:green'
      }
    }
  },
  methods: {
    getRowClass({ row, column, rowIndex, columnIndex }) {
      if (rowIndex == 0) {
        return 'background:#EFEFEF'
      } else {
        return ''
      }
    },
    handleEdit (index, row) {
      console.log(row)
      console.log(index)
      this.fileUnpass[index].stop = !this.fileUnpass.stop
    },
    penEdit (index, row) {
      let _this = this
      console.log(row)
      console.log(index)
      _this.fileUnpass[index].edit = !_this.fileUnpass[index].edit
      if (_this.fileUnpass[index].edit == false) {
        let episodeName = encodeURIComponent(_this.fileUnpass[index].episodeName)
        let episodeId = _this.fileUnpass[index].projectEpisodeId
        let projectId = _this.fileUnpass[index].projectId
        console.log(episodeName)
        console.log(episodeId)
        console.log(projectId)
        get({
          json: true,
          url: server.host + server.api.api_episode_updateEpisodeName + '?episodeName=' + episodeName + '&episodeId=' + episodeId + '&projectId=' + projectId
        }, function(response) {
          // 数据库中有两条相同数据冲突返回fail提示
          if (response.result == 'fail') {
            let message = response.message
            _this.$message({
              showClose: true,
              message: message
            })
            // 并将原数据绑定在input框中
            _this.fileUnpass[index].episodeName = _this.oldepisodeName[index]
          }
          console.log(response)
        }, function(fail) {
          console.log(fail)
        })
      } else {
        // 点击修改时用数组暂存episodeName剧集名称
        _this.oldepisodeName[index] = _this.fileUnpass[index].episodeName
      }
    },
    childByValue: function (currentPage) {
      // childValue就是子组件传过来的值
      this.name = currentPage
      console.log(this.name)
    },
    // 初始化时显示的列表信息
    getFileList() {
      var _this = this
      episode.getEpisodeList(this.producerId, 0, this.name, this.cPage, this.csize, function(items) {
        console.log(items)
        _this.fileUnpass = items
        for (var i = 0; i < _this.fileUnpass.length; i++) {
          _this.$set(_this.fileUnpass[i], 'edit', false)
          _this.$set(_this.fileUnpass[i], 'stop', false)
          // this.$set(this.fileList[i], 'againa', '0')
        }
        // todo
      })
    }

  }
}
</script>

<style scoped>
  .i-icon{
    display: inline-block;
    font-size: 0.58rem;
    color: #64A3FF;
    margin-left: 0.42rem;
  }

  p{
    display: inline-block;
  }
  
  .form-group{
    height: 1.33rem;
    line-height: 1.33rem;
  }

  .input-group{
    margin-right: 0.42rem;
    width: 5.88rem;
    display: inline-block;
    }

  .preserve{
    color: #64A3FF;
  }

  .operate{
    color: #64A3FF;
  } 

  .progress{
    width:10rem;
    display: inline-block;
  }
  
  .refuse {
    color:red;
  }
   
</style>
